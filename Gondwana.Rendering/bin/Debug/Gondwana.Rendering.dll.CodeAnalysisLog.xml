<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering\bin\Debug\Gondwana.Rendering.dll">
   <Modules>
    <Module Name="gondwana.rendering.dll">
     <Namespaces>
      <Namespace Name="Gondwana.Rendering">
       <Types>
        <Type Name="Backbuffer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'Backbuffer' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="Backbuffer.cs" Line="330">Modify 'Backbuffer.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Finalize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="Breaking">
             <Issue Name="FinalizeImplementation" Certainty="95" Level="Error" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="Backbuffer.cs" Line="67">Modify 'Backbuffer.~Backbuffer()' so that it calls Dispose(false) and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VisibleSurface" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Drawing.Graphics,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="22">'VisibleSurface.VisibleSurface(Graphics, int, int)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VisibleSurface..ctor(Graphics, Int32, Int32)&#xD;&#xA;VisibleSurfaceBase.set_DC(Graphics):Void&#xD;&#xA;VisibleSurfaceBase.set_Buffer(IBackbuffer):Void&#xD;&#xA;VisibleSurface.set_RedrawDirtyRectangleOnly(Boolean):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="22">'VisibleSurface.VisibleSurface(Graphics, int, int)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VisibleSurface..ctor(Graphics, Int32, Int32)&#xD;&#xA;VisibleSurfaceBase.set_DC(Graphics):Void&#xD;&#xA;VisibleSurfaceBase.set_Buffer(IBackbuffer):Void&#xD;&#xA;VisibleSurface.set_RedrawDirtyRectangleOnly(Boolean):Void&#xD;&#xA;VisibleSurfaceBase.set_RedrawDirtyRectangleOnly(Boolean):Void&#xD;&#xA;VisibleSurfaceBase.get_RedrawDirtyRectangleOnly():Boolean&#xD;&#xA;VisibleSurfaceBase.get_Buffer():IBackbuffer</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Drawing.Graphics,System.Int32,System.Int32,Gondwana.Common.Grid.GridPointMatrixes)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="30">'VisibleSurface.VisibleSurface(Graphics, int, int, GridPointMatrixes)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VisibleSurface..ctor(Graphics, Int32, Int32, GridPointMatrixes)&#xD;&#xA;VisibleSurfaceBase.set_DC(Graphics):Void&#xD;&#xA;VisibleSurface.set_RedrawDirtyRectangleOnly(Boolean):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="30">'VisibleSurface.VisibleSurface(Graphics, int, int, GridPointMatrixes)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VisibleSurface..ctor(Graphics, Int32, Int32, GridPointMatrixes)&#xD;&#xA;VisibleSurfaceBase.set_DC(Graphics):Void&#xD;&#xA;VisibleSurface.set_RedrawDirtyRectangleOnly(Boolean):Void&#xD;&#xA;VisibleSurfaceBase.set_RedrawDirtyRectangleOnly(Boolean):Void&#xD;&#xA;VisibleSurfaceBase.get_RedrawDirtyRectangleOnly():Boolean&#xD;&#xA;VisibleSurfaceBase.get_Buffer():IBackbuffer</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Windows.Forms.Control)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="41">'VisibleSurface.VisibleSurface(Control)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VisibleSurface..ctor(Control)&#xD;&#xA;VisibleSurfaceBase.set_DC(Graphics):Void&#xD;&#xA;VisibleSurfaceBase.set_Buffer(IBackbuffer):Void&#xD;&#xA;VisibleSurface.set_RedrawDirtyRectangleOnly(Boolean):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="41">'VisibleSurface.VisibleSurface(Control)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VisibleSurface..ctor(Control)&#xD;&#xA;VisibleSurfaceBase.set_DC(Graphics):Void&#xD;&#xA;VisibleSurfaceBase.set_Buffer(IBackbuffer):Void&#xD;&#xA;VisibleSurface.set_RedrawDirtyRectangleOnly(Boolean):Void&#xD;&#xA;VisibleSurfaceBase.set_RedrawDirtyRectangleOnly(Boolean):Void&#xD;&#xA;VisibleSurfaceBase.get_RedrawDirtyRectangleOnly():Boolean&#xD;&#xA;VisibleSurfaceBase.get_Buffer():IBackbuffer</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Windows.Forms.Control,Gondwana.Common.Grid.GridPointMatrixes)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="49">'VisibleSurface.VisibleSurface(Control, GridPointMatrixes)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VisibleSurface..ctor(Control, GridPointMatrixes)&#xD;&#xA;VisibleSurfaceBase.set_DC(Graphics):Void&#xD;&#xA;VisibleSurface.set_RedrawDirtyRectangleOnly(Boolean):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="49">'VisibleSurface.VisibleSurface(Control, GridPointMatrixes)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VisibleSurface..ctor(Control, GridPointMatrixes)&#xD;&#xA;VisibleSurfaceBase.set_DC(Graphics):Void&#xD;&#xA;VisibleSurface.set_RedrawDirtyRectangleOnly(Boolean):Void&#xD;&#xA;VisibleSurfaceBase.set_RedrawDirtyRectangleOnly(Boolean):Void&#xD;&#xA;VisibleSurfaceBase.get_RedrawDirtyRectangleOnly():Boolean&#xD;&#xA;VisibleSurfaceBase.get_Buffer():IBackbuffer</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="146">Modify 'VisibleSurface.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="146">Ensure that 'VisibleSurface.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Finalize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="Breaking">
             <Issue Name="FinalizeImplementation" Certainty="95" Level="Error" Path="e:\TFS\Hidden Worlds Games\Gondwana\Gondwana.Rendering" File="VisibleSurface.cs" Line="61">Modify 'VisibleSurface.~VisibleSurface()' so that it calls Dispose(false) and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisibleSurfaceBind" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2015-08-29 17:30:32Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'VisibleSurfaceBindEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'VisibleSurfaceBindEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="DisposeSignature">Ensure that {0} is declared as public and sealed.</Resolution>
   <Resolution Name="FinalizeImplementation">Modify {0} so that it calls Dispose(false) and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
